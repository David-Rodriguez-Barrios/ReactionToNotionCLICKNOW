{"ast":null,"code":"var _jsxFileName = \"/Users/davidrodriguezbarrios/Documents/GitHub/assignment-06-lotion-David-Rodriguez-Barrios/src/Editor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { useParams, useNavigate, Link, useOutletContext } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Editor(_ref) {\n  _s();\n  let {\n    activeNote,\n    active\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const NotesList = useOutletContext();\n  const [value, setValue] = useState('');\n  const noteEditing = NotesList.find(note => note.id === id);\n  const [body, setBody] = useState(noteEditing.Body);\n  // these intialize these values\n  const [date, setDate] = useState(noteEditing.Date);\n  const [title, setTitle] = useState(noteEditing.Title);\n  const delete_note = deleting_note_id => {\n    const answer = window.confirm(\"Are you sure?\");\n    if (answer) {\n      NotesList.filter(note => note.id !== deleting_note_id);\n    }\n    navigator(`/`);\n    const noteEditing = NotesList.find(note => note.id === deleting_note_id);\n    noteEditing.Body = \"\";\n    noteEditing.Date = \"\";\n    noteEditing.Title = \"\";\n    noteEditing.id = \"\";\n    localStorage.delete_note;\n  };\n  const StoreData = () => {\n    noteEditing.Title = title;\n    noteEditing.Date = date;\n    noteEditing.Body = body;\n    localStorage.setItem('NotesStorage', JSON.stringify(NotesList));\n    console.log(NotesList);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"entire_flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"Editor_header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"Editor_header_RHS\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"titletxt\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"date\",\n            value: date,\n            onChange: e => setDate(e.target.value),\n            type: \"datetime-local\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"Save\",\n          onClick: StoreData,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"Delete\",\n          onClick: delete_note,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        theme: \"snow\",\n        value: body,\n        onChange: value => setBody(value),\n        placeholder: \"Your note here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Editor, \"Uj+S6TlMW5nMAY3tKp813oEMJ0E=\", false, function () {\n  return [useParams, useOutletContext];\n});\n_c = Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useState","ReactQuill","useParams","useNavigate","Link","useOutletContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Editor","_ref","_s","activeNote","active","id","NotesList","value","setValue","noteEditing","find","note","body","setBody","Body","date","setDate","Date","title","setTitle","Title","delete_note","deleting_note_id","answer","window","confirm","filter","navigator","localStorage","StoreData","setItem","JSON","stringify","console","log","children","onChange","e","target","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","theme","placeholder","_c","$RefreshReg$"],"sources":["/Users/davidrodriguezbarrios/Documents/GitHub/assignment-06-lotion-David-Rodriguez-Barrios/src/Editor.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport{useParams,useNavigate,Link,useOutletContext} from \"react-router-dom\";\n\nexport default function Editor({activeNote,active}){\n    const {id} = useParams();\n    const NotesList = useOutletContext();\n    \n    \n    \n    \n    \nconst [value, setValue] = useState('');\n    const noteEditing = NotesList.find(note => note.id === id);\n    \n    const [body, setBody] = useState(noteEditing.Body); \n    // these intialize these values\n    const [date, setDate] = useState(noteEditing.Date);\n    const [title, setTitle] = useState(noteEditing.Title);\n\n\n\n\n \n    const delete_note =(deleting_note_id)=>{\n        const answer= window.confirm(\"Are you sure?\");\n        if (answer){\n            NotesList.filter((note)=>note.id !== deleting_note_id);\n        }\n        navigator(`/`)\n        const noteEditing = NotesList.find(note => note.id === deleting_note_id);\n        noteEditing.Body=\"\";\n        noteEditing.Date=\"\";\n        noteEditing.Title=\"\";\n        noteEditing.id=\"\";\n        localStorage.delete_note\n\n    }\n\n\n    const StoreData = () => {\n        \n        noteEditing.Title = title;\n        noteEditing.Date = date;\n        noteEditing.Body = body;\n        localStorage.setItem('NotesStorage', JSON.stringify(NotesList));\n        console.log(NotesList);\n    }\n    return (\n    <>\n    <div id=\"entire_flex\">\n    \n        <div id=\"Editor_header\">\n            <div id=\"Editor_header_RHS\">\n            <input id= \"titletxt\" value ={title} onChange={(e) => setTitle(e.target.value)} type=\"text\" />\n            <input id=\"date\" value ={date} onChange={(e) => setDate(e.target.value)}type=\"datetime-local\" />\n        </div>\n        <button id=\"Save\" onClick={StoreData}>Save</button>\n        <button id =\"Delete\" onClick={delete_note}>Delete</button>\n    </div>\n    <ReactQuill theme=\"snow\" value={body} onChange={(value) => setBody(value)} placeholder={\"Your note here\"}/>\n    </div>\n    </>\n    \n    )\n    }\n    "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}