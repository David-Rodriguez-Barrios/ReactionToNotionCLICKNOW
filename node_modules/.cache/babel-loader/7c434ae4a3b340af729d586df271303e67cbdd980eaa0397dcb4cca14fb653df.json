{"ast":null,"code":"// import React, { createElement, useState,useRef, useEffect } from 'react';\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n// import NotesList from './NotesList';\n// import Notes from './NotesList';\n// import uuidv4 from 'uuid/v4';\n// import 'react-quill/dist/quill.snow.css';\n\n// const LOCAL_STORAGE_KEY='Notion.notes'\n\n// useEffect(()=>{\n//   const storedNotes=JSON.parse(localStorage.getitem(LOCAL_STORAGE_KEY))\n//   if (storedNotes) setNotes(storedNotes)},[])\n\n// // this loads the saved information on reload.\n\n// useEffect(()=>{localStorage.setItem(LOCAL_STORAGE_KEY,JSON.stringify(value))},[value])\n// // this saves the notes to local storage\n\n// function MyComponent() {\n//   const [value, setValue] = useState('');\n\n//   return <ReactQuill theme=\"snow\" value={value} onChange={setValue} />;\n// }\n// // idk how to use this top function for the editor part\n\n// function BottomSection(){\n//     function handleAddNote(e){\n//       document.getElementById(\"right_bar\").innerHTML ='<ReactQuill theme=\"snow\" value={value} onChange={setValue} /><input type=\"datetime-local\" />  '\n//       // this is supposed to them to fill in the right_bar.\n//       // when they click save note it will save\n\n//       const name= \"\" // add this so that every time we want to save a note it is saved with the value name which will then be used to save the new note\n//       setNotes([...prevNotes,{id:uuidv4(),name:name}])\n// {/* <input type=\"datetime-local\" /> */}\n//     }\n\n//     const [value, setValue] = useState([{id:1,name:'Todo1'}]);\n\n//     return(  <div id=\"bottom_section\">\n//     <div id=\"left_bar\">\n\n//       <div id=\"Add_notes\">\n//         <div className=\"notes\">\n//           <div id=\"FirstBoxNotes\">Notes</div>\n//           <button id=\"new_note\" onClick={handleAddNote}>&#43;</button>\n//         </div>\n//       <NotesList value={value}/> \n//           {/* the line above is to see what notes list outputs when value is passed in */}\n//       </div>\n//     </div>\n//     <div id=\"right_bar\"> Select a note, or create a new one.\n\n//         {/* this right bar is supposed to change onclick of add new note to a default  */}\n\n//     </div>\n// </div>);\n// }\n// export default BottomSection;\n\n// // window.onload = function () {\n// //     const NEWNOTE = document.getElementById(\"new_note\");\n\n// //     NEWNOTE.addEventListener(\"click\",()=>\n// //     NEW_DATA());\n// // };\n\n// // function NEW_DATA(){\n// //     const element = document.createElement(right_bar);\n// //     const e = document.createElement('div');\n// //  e.innerHTML = '<input type=\"datetime-local\" /> <ReactQuill theme=\"snow\" value={value} onChange={setValue} />';\n// //     document.body.appendChild(e);\n\n// // }\n\n// // function NEW_DATA(){\n// // ]\n// // }","map":{"version":3,"names":[],"sources":["/Users/davidrodriguezbarrios/Documents/GitHub/assignment-06-lotion-David-Rodriguez-Barrios/src/Bottom_section.js"],"sourcesContent":["// import React, { createElement, useState,useRef, useEffect } from 'react';\n// import ReactQuill from 'react-quill';\n// import 'react-quill/dist/quill.snow.css';\n// import NotesList from './NotesList';\n// import Notes from './NotesList';\n// import uuidv4 from 'uuid/v4';\n// import 'react-quill/dist/quill.snow.css';\n\n\n// const LOCAL_STORAGE_KEY='Notion.notes'\n\n// useEffect(()=>{\n//   const storedNotes=JSON.parse(localStorage.getitem(LOCAL_STORAGE_KEY))\n//   if (storedNotes) setNotes(storedNotes)},[])\n\n// // this loads the saved information on reload.\n\n\n// useEffect(()=>{localStorage.setItem(LOCAL_STORAGE_KEY,JSON.stringify(value))},[value])\n// // this saves the notes to local storage\n\n\n// function MyComponent() {\n//   const [value, setValue] = useState('');\n\n//   return <ReactQuill theme=\"snow\" value={value} onChange={setValue} />;\n// }\n// // idk how to use this top function for the editor part\n\n// function BottomSection(){\n//     function handleAddNote(e){\n//       document.getElementById(\"right_bar\").innerHTML ='<ReactQuill theme=\"snow\" value={value} onChange={setValue} /><input type=\"datetime-local\" />  '\n//       // this is supposed to them to fill in the right_bar.\n//       // when they click save note it will save\n\n//       const name= \"\" // add this so that every time we want to save a note it is saved with the value name which will then be used to save the new note\n//       setNotes([...prevNotes,{id:uuidv4(),name:name}])\n// {/* <input type=\"datetime-local\" /> */}\n//     }\n    \n    \n    \n    \n    \n    \n//     const [value, setValue] = useState([{id:1,name:'Todo1'}]);\n    \n//     return(  <div id=\"bottom_section\">\n//     <div id=\"left_bar\">\n  \n\n    \n      \n//       <div id=\"Add_notes\">\n//         <div className=\"notes\">\n//           <div id=\"FirstBoxNotes\">Notes</div>\n//           <button id=\"new_note\" onClick={handleAddNote}>&#43;</button>\n//         </div>\n//       <NotesList value={value}/> \n//           {/* the line above is to see what notes list outputs when value is passed in */}\n//       </div>\n//     </div>\n//     <div id=\"right_bar\"> Select a note, or create a new one.\n    \n//         {/* this right bar is supposed to change onclick of add new note to a default  */}\n\n//     </div>\n// </div>);\n// }\n// export default BottomSection;\n\n\n\n// // window.onload = function () {\n// //     const NEWNOTE = document.getElementById(\"new_note\");\n     \n// //     NEWNOTE.addEventListener(\"click\",()=>\n// //     NEW_DATA());\n// // };\n\n// // function NEW_DATA(){\n// //     const element = document.createElement(right_bar);\n// //     const e = document.createElement('div');\n// //  e.innerHTML = '<input type=\"datetime-local\" /> <ReactQuill theme=\"snow\" value={value} onChange={setValue} />';\n// //     document.body.appendChild(e);\n    \n// // }\n\n// // function NEW_DATA(){\n// // ]\n// // }"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAOA;;AAEA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}