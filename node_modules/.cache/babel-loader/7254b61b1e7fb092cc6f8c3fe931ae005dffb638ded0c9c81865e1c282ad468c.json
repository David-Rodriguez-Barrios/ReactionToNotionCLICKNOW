{"ast":null,"code":"var _jsxFileName = \"/Users/davidrodriguezbarrios/Documents/GitHub/assignment-06-lotion-David-Rodriguez-Barrios/src/NotesCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, useOutletContext } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NotesCard(_ref) {\n  _s();\n  let {\n    notes,\n    setActive,\n    active\n  } = _ref;\n  const options = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\"\n  };\n  const formatDate = when => {\n    const formatted = new Date(when).toLocaleString(\"en-US\", options);\n    if (formatted === \"Invalid Date\") {\n      return \"\";\n    }\n    return formatted;\n  };\n  const {\n    id\n  } = useParams();\n  // const NotesList = useOutletContext();\n\n  const navigator = useNavigate();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: ` notes_lists_cards ${notes.id === active && \"notes_active\"}`,\n      onClick: () => {\n        setActive(notes.id);\n        navigator(`/` + notes.id + `/edit`);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: notes.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formatDate(notes.Date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: notes.Body\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 66\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(NotesCard, \"e6FnH/HWUSh9NNmFS4W9qmO7LMI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = NotesCard;\nvar _c;\n$RefreshReg$(_c, \"NotesCard\");","map":{"version":3,"names":["React","useState","useParams","useOutletContext","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","NotesCard","_ref","_s","notes","setActive","active","options","year","month","day","hour","minute","formatDate","when","formatted","Date","toLocaleString","id","navigator","children","className","onClick","Title","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","Body","_c","$RefreshReg$"],"sources":["/Users/davidrodriguezbarrios/Documents/GitHub/assignment-06-lotion-David-Rodriguez-Barrios/src/NotesCard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams,useOutletContext } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function NotesCard({notes,setActive, active}){\n    const options = {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\",\n      };\n    \n      const formatDate = (when) => {\n        const formatted = new Date(when).toLocaleString(\"en-US\", options);\n        if (formatted === \"Invalid Date\") {\n          return \"\";\n        }\n        return formatted;\n      };\n\n    const {id} = useParams();\n    // const NotesList = useOutletContext();\n    \n    const navigator=useNavigate();\n    \n    return (\n    <>\n    <div className= {` notes_lists_cards ${ notes.id=== active && \"notes_active\"}`}\n    onClick={() =>{ setActive(notes.id);\n    navigator(`/` + notes.id+`/edit`)}}>\n        {/* <div>SHIVAM</div> */}\n     <div >{notes.Title}</div><div>{formatDate(notes.Date)}</div><div dangerouslySetInnerHTML={{ __html: notes.Body }}></div></div>\n</>\n    )\n    }\n    "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAACC,gBAAgB,QAAQ,kBAAkB;AAC7D,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,eAAe,SAASC,SAASA,CAAAC,IAAA,EAA2B;EAAAC,EAAA;EAAA,IAA1B;IAACC,KAAK;IAACC,SAAS;IAAEC;EAAM,CAAC,GAAAJ,IAAA;EACvD,MAAMK,OAAO,GAAG;IACZC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,MAAM;IACbC,GAAG,EAAE,SAAS;IACdC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE;EACV,CAAC;EAED,MAAMC,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC,CAACG,cAAc,CAAC,OAAO,EAAEV,OAAO,CAAC;IACjE,IAAIQ,SAAS,KAAK,cAAc,EAAE;MAChC,OAAO,EAAE;IACX;IACA,OAAOA,SAAS;EAClB,CAAC;EAEH,MAAM;IAACG;EAAE,CAAC,GAAGxB,SAAS,EAAE;EACxB;;EAEA,MAAMyB,SAAS,GAACvB,WAAW,EAAE;EAE7B,oBACAE,OAAA,CAAAE,SAAA;IAAAoB,QAAA,eACAtB,OAAA;MAAKuB,SAAS,EAAI,sBAAsBjB,KAAK,CAACc,EAAE,KAAIZ,MAAM,IAAI,cAAe,EAAE;MAC/EgB,OAAO,EAAEA,CAAA,KAAK;QAAEjB,SAAS,CAACD,KAAK,CAACc,EAAE,CAAC;QACnCC,SAAS,CAAE,GAAE,GAAGf,KAAK,CAACc,EAAE,GAAE,OAAM,CAAC;MAAA,CAAE;MAAAE,QAAA,gBAElCtB,OAAA;QAAAsB,QAAA,EAAOhB,KAAK,CAACmB;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eAAA7B,OAAA;QAAAsB,QAAA,EAAMP,UAAU,CAACT,KAAK,CAACY,IAAI;MAAC;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eAAA7B,OAAA;QAAK8B,uBAAuB,EAAE;UAAEC,MAAM,EAAEzB,KAAK,CAAC0B;QAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAM,iBAChI;AAEC;AAACxB,EAAA,CA/BmBF,SAAS;EAAA,QAiBhBP,SAAS,EAGNE,WAAW;AAAA;AAAAmC,EAAA,GApBP9B,SAAS;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}